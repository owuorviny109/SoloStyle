// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Product {
  id          String @id @default(cuid())
  name        String
  brand       String
  description String?
  basePrice   Int    // Price in KES cents
  imageUrls   String[] // Array of image URLs
  category    String @default("shoes")
  active      Boolean @default(true)
  featured    Boolean @default(false)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  
  variants    ProductVariant[]
  orderItems  OrderItem[]
  
  @@index([category, active])
  @@index([featured, active])
}

model ProductVariant {
  id              String @id @default(cuid())
  productId       String
  size            String  // e.g., "40", "41", "42"
  color           String?
  sku             String @unique
  priceAdjustment Int @default(0) // Price difference from base price in cents
  
  // Inventory Management
  totalStock      Int @default(0)
  reservedStock   Int @default(0)
  soldStock       Int @default(0)
  lowStockThreshold Int @default(5)
  
  // Calculated field: availableStock = totalStock - reservedStock - soldStock
  
  product         Product @relation(fields: [productId], references: [id], onDelete: Cascade)
  orderItems      OrderItem[]
  reservations    StockReservation[]
  
  @@index([productId, size])
  @@index([sku])
}

model StockReservation {
  id          String @id @default(cuid())
  variantId   String
  sessionId   String // For guest users
  quantity    Int
  status      ReservationStatus @default(ACTIVE)
  expiresAt   DateTime
  createdAt   DateTime @default(now())
  
  variant     ProductVariant @relation(fields: [variantId], references: [id], onDelete: Cascade)
  
  @@index([expiresAt, status])
  @@index([sessionId])
}

model Order {
  id                  String @id @default(cuid())
  orderNumber         String @unique // Human-readable order number
  status              OrderStatus @default(PENDING)
  
  // Customer Information
  customerEmail       String?
  customerPhone       String
  customerName        String?
  
  // Pricing
  subtotal            Int // Before tax and shipping
  shippingAmount      Int @default(0)
  totalAmount         Int
  
  // Delivery
  shippingAddress     Json
  
  // Payment
  paymentMethod       String @default("mpesa")
  paymentStatus       PaymentStatus @default(PENDING)
  mpesaCheckoutId     String? @unique
  mpesaMerchantReq    String?
  mpesaReceiptNumber  String?
  paidAt              DateTime?
  
  // Metadata
  customerNotes       String?
  createdAt           DateTime @default(now())
  updatedAt           DateTime @updatedAt
  
  items               OrderItem[]
  paymentEvents       PaymentEvent[]
  
  @@index([status])
  @@index([customerPhone])
  @@index([createdAt])
}

model OrderItem {
  id          String @id @default(cuid())
  orderId     String
  productId   String
  variantId   String
  quantity    Int
  unitPrice   Int // Price at time of order
  totalPrice  Int // unitPrice * quantity
  size        String
  color       String?
  
  order       Order @relation(fields: [orderId], references: [id], onDelete: Cascade)
  product     Product @relation(fields: [productId], references: [id])
  variant     ProductVariant @relation(fields: [variantId], references: [id])
  
  @@index([orderId])
}

model PaymentEvent {
  id          String @id @default(cuid())
  orderId     String
  eventType   String // 'stkpush_initiated', 'callback_received', 'status_updated'
  payload     Json
  resultCode  Int?
  resultDesc  String?
  createdAt   DateTime @default(now())
  
  order       Order @relation(fields: [orderId], references: [id], onDelete: Cascade)
  
  @@index([orderId, createdAt])
}

// Enums
enum OrderStatus {
  PENDING
  PAYMENT_PENDING
  PAID
  PROCESSING
  SHIPPED
  DELIVERED
  CANCELLED
  FAILED
}

enum PaymentStatus {
  PENDING
  PROCESSING
  COMPLETED
  FAILED
  REFUNDED
}

enum ReservationStatus {
  ACTIVE
  CONFIRMED
  RELEASED
  EXPIRED
}